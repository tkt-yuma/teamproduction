<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.user.repository.UserLoginMapper">

<!-- ユーザーログイン時に必要な情報（ID,メール,パスワード）をDBから指定する処理 -->
	<resultMap id = "UserLoginMap" type="com.example.demo.user.entity.UserLogin">
		
		<result column="user_id"   jdbcType="INTEGER" property="userId"   />
		<result column="user_mail" jdbcType="VARCHAR" property="userMail" />
		<result column="user_pass" jdbcType="VARCHAR" property="userPass" />

		
	</resultMap>
	
	<!-- userloginテーブルからユーザーIDを昇順に選択するSQL文 -->
	<select id = "selectAll" resultMap="UserLoginMap">
		select * from userlogin order by user_id asc
	</select>
	
	<!-- userloginテーブルからメールアドレスを選択するSQL文 -->
	<select id = "findByUserMail" resultMap="UserLoginMap">
		select * from userlogin where user_mail = #{mail}
	</select>
	
<!--	userloginテーブルを更新するSQL文-->
<!--	<update id="updateById">-->
<!--		update userlogin set user_pass = #{userPass} where user_id = #{userId};-->
<!--		</update>-->
		
	<!-- userloginテーブルからユーザーIDをt取る -->
	<select id = "findUserId" resultType="java.lang.Integer">
		select user_id from userlogin where user_mail = #{username}
	</select>
	
<!-- パスワードを更新するSQL文 -->
	<update id="updatePass">
        update userlogin set user_pass = #{userDto.userPass}, user_mail = #{userDto.userMail} where user_id = #{integer}
    </update>

<!-- 新規ユーザーログイン情報を追加するSQL文 -->
	<insert id="addUserLogin" parameterType="com.example.demo.user.dto.UserDto" useGeneratedKeys="true" keyProperty="userId">
		insert into userlogin (user_mail, user_pass)
		values (#{userMail}, #{userPass})
	</insert>
	
</mapper>