<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.user.repository.UserInfoMapper">

<!-- ユーザーリストに登録されている情報をDBから指定する処理 -->
	<resultMap id = "UserInfoMap" type="com.example.demo.user.entity.UserInfo">
		<result column="user_id"         jdbcType="INTEGER"   property="userId"          />
		<result column="user_real_name"  jdbcType="VARCHAR"   property="userRealName"    />
		<result column="user_mail"       jdbcType="VARCHAR"   property="userMail"        />
		<result column="user_tel"        jdbcType="VARCHAR"   property="userTel"       />
		<result column="user_birthday"   jdbcType="VARCHAR" property="userBirthday"    />
		<result column="user_creditnum"  jdbcType="VARCHAR"   property="userCreditnum" />
		<result column="user_address"    jdbcType="VARCHAR"   property="userAddress"     />
		
	</resultMap>
	
	<!-- ユーザーリストに登録されている情報をIDの昇順に全件表示するSQL文-->
	<select id = "selectAll" resultMap="UserInfoMap">
		select * from userinfo order by user_id asc
	</select>
	
	<!-- ユーザーリストに登録されている情報をuserMailを住県に全件表示するSQL文-->
	<select id="selectById" resultMap="UserInfoMap">
		select * from userinfo where user_mail = #{userMail}
	</select>
	
	<!--ユーザーリストを更新するSQL文-->
	 <update id="updateById">
	 	update userinfo set (user_real_name = #{userRealName},user_mail = #{userMail},
		user_tel = #{userTel},user_creditnum = #{userCreditnum},user_address = #{userAddress}) where user_id =  #{userId};
	</update>
	
	<!--ユーザーリストを削除するSQL文-->
	<delete id="deleteById">
		delete from userinfo where user_id = #{userId}
		</delete>
</mapper>